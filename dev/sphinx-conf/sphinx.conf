#
# Minimal Sphinx configuration sample (clean, simple, functional)
#

source product_search
{
	type			= mysql
	sql_host		= 127.0.0.1    # 수정
	sql_user		= root         # 수정
	sql_pass		= root         # 수정
	sql_db			= yongmangu100
	sql_port		= 3312
	
	sql_query_pre 	= SET NAMES utf8
	sql_query	= SELECT p.number, p.*, p.id as ids, b.brandnm, b.brandnmh, b.brandcd, b.brandsort, CASE WHEN pd.departure_place != '0' AND pd.departure_place != '' THEN pd.departure_place ELSE '' END AS departure_place, pd.quick_yn, TRIM(CONCAT(b.brandnm, ' ', b.brandnmh, ' ', REPLACE(b.keyword, ',', ' '))) AS keywordBrand, TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_header_category WHERE header_category = p.header_category)) AS keywordHeaderCategory, TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_category WHERE isDisplay = 'Y' AND thread = SUBSTR(p.category,1,2))) AS keywordCategory01, CASE WHEN LENGTH(p.category) >= 5 THEN TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_category WHERE isDisplay = 'Y' AND thread = SUBSTR(p.category,1,5))) ELSE '' END AS keywordCategory02, CASE WHEN LENGTH(p.category) = 8 THEN TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_category WHERE isDisplay = 'Y' AND thread = p.category)) ELSE '' END AS keywordCategory03, CASE WHEN p.filter != '' THEN TRIM((SELECT GROUP_CONCAT(TRIM(CONCAT(filter_name, ' ', TRIM(REPLACE(keyword, ',', ' ')))) SEPARATOR ' ') FROM car_filter WHERE p.filter LIKE CONCAT('%|', number, '|%'))) ELSE '' END AS keywordFilter, IFNULL((SELECT GROUP_CONCAT(TRIM(REPLACE(related_keyword, ',', ' ')) SEPARATOR ' ') FROM related_keyword WHERE number IN ( SELECT related_keyword_number FROM product_related_keyword_match WHERE product_number = p.number)), '') AS keywordRelated FROM auction_product AS p INNER JOIN auction_product_detail AS pd ON p.number = pd.num INNER JOIN brand AS b ON p.brand = b.brandcd

	sql_field_string = ids
	sql_field_string = number
	sql_field_string = header_category
	sql_field_string = category
	sql_field_string = filter
	sql_field_string = product_name
	sql_field_string = img1
	sql_field_string = img2
	sql_field_string = img3
	sql_field_string = img4
	sql_field_string = img5
	sql_field_string = img6
	sql_field_string = img7
	sql_field_string = img8
	sql_field_string = img9
	sql_field_string = img10
	sql_field_string = tmpBrand
	sql_field_string = memo
	sql_field_string = event_yn
	sql_field_string = fee_yn
	sql_field_string = premium_yn
	sql_field_string = brandnm
	sql_field_string = brandnmh
	sql_attr_uint = brandcd
	sql_attr_uint = brandsort
	
	sql_attr_uint = product_stats
	sql_attr_uint = jinhaeng
	sql_attr_uint = sijoong_price
	sql_attr_uint = spec_price
	sql_attr_uint = baro_price
	sql_attr_uint = now_price
	
	sql_field_string = itcoupon_state
	sql_field_string = itcoupon_start
	sql_field_string = itcoupon_end
	sql_attr_uint = itcoupon_price
	
	sql_attr_uint = cupon_price
	sql_attr_uint = jaego
	sql_attr_uint = now_jaego
	sql_attr_uint = inquire
	sql_attr_uint = cnt_zzim
	sql_attr_uint = product_sangtae
	sql_attr_uint = brand
	sql_attr_uint = baesong_from
	sql_attr_uint = baesong_type
	sql_attr_uint = sell_count
	sql_field_string = start_date
	sql_field_string = end_date
	sql_field_string = focus
	sql_field_string = premium_start
	sql_field_string = premium
	sql_field_string = bold
	sql_field_string = icon
	sql_field_string = deal
	sql_field_string = regdt
	sql_field_string = reg_date
	sql_field_string = lastupdate
	sql_field_string = tmpDate
	
	sql_field_string = departure_place
	sql_field_string = quick_yn

	sql_field_string = keywordBrand
	sql_field_string = keywordHeaderCategory
	sql_field_string = keywordCategory01
	sql_field_string = keywordCategory02
	sql_field_string = keywordCategory03
	sql_field_string = keywordFilter
	sql_field_string = keywordRelated
}

source search_delta : product_search
{
	sql_query_pre	= SET NAMES utf8
	sql_query	= SELECT p.number, p.*, p.id as ids, b.brandnm, b.brandnmh, b.brandcd, b.brandsort, CASE WHEN pd.departure_place != '0' AND pd.departure_place != '' THEN pd.departure_place ELSE '' END AS departure_place, pd.quick_yn, TRIM(CONCAT(b.brandnm, ' ', b.brandnmh, ' ', REPLACE(b.keyword, ',', ' '))) AS keywordBrand, TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_header_category WHERE header_category = p.header_category)) AS keywordHeaderCategory, TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_category WHERE isDisplay = 'Y' AND thread = SUBSTR(p.category,1,2))) AS keywordCategory01, CASE WHEN LENGTH(p.category) >= 5 THEN TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_category WHERE isDisplay = 'Y' AND thread = SUBSTR(p.category,1,5))) ELSE '' END AS keywordCategory02, CASE WHEN LENGTH(p.category) = 8 THEN TRIM((SELECT CONCAT(title, ' ', TRIM(REPLACE(keyword, ',', ' '))) FROM car_category WHERE isDisplay = 'Y' AND thread = p.category)) ELSE '' END AS keywordCategory03, CASE WHEN p.filter != '' THEN TRIM((SELECT GROUP_CONCAT(TRIM(CONCAT(filter_name, ' ', TRIM(REPLACE(keyword, ',', ' ')))) SEPARATOR ' ') FROM car_filter WHERE p.filter LIKE CONCAT('%|', number, '|%'))) ELSE '' END AS keywordFilter, IFNULL((SELECT GROUP_CONCAT(TRIM(REPLACE(related_keyword, ',', ' ')) SEPARATOR ' ') FROM related_keyword WHERE number IN ( SELECT related_keyword_number FROM product_related_keyword_match WHERE product_number = p.number)), '') AS keywordRelated FROM auction_product AS p INNER JOIN auction_product_detail AS pd ON p.number = pd.num INNER JOIN brand AS b ON p.brand = b.brandcd WHERE lastupdate >= DATE_ADD(NOW(), INTERVAL -25 MINUTE)
	#sql_query_killlist	= SELECT p_no FROM sphinx_product_del WHERE delete_yn = 'N'
	sql_query_killlist	= SELECT p_no FROM sphinx_product_del WHERE reg_date > DATE_ADD(NOW(), INTERVAL -25 MINUTE)
	#sql_query_post_index	= UPDATE sphinx_product_del set delete_yn = 'Y' WHERE delete_yn = 'N'
}

index product_search
{
	source			= product_search
	path			= /var/idx/sphinx/product_search
	docinfo			= extern
	#charset_type	= utf-8
	charset_table	= 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F
	#phrase_boundary = U+0020, U+002C
	#phrase_boundary_step = 100

	ngram_len = 2
	ngram_chars = U+4E00..U+9FBB, U+3400..U+4DB5, U+20000..U+2A6D6, U+FA0E, U+FA0F, U+FA11, U+FA13, U+FA14, U+FA1F, U+FA21, U+FA23, U+FA24, U+FA27, U+FA28, U+FA29, U+3105..U+312C, U+31A0..U+31B7, U+3041, U+3043, U+3045, U+3047, U+3049, U+304B, U+304D, U+304F, U+3051, U+3053, U+3055, U+3057, U+3059, U+305B, U+305D, U+305F, U+3061, U+3063, U+3066, U+3068, U+306A..U+306F, U+3072, U+3075, U+3078, U+307B, U+307E..U+3083, U+3085, U+3087, U+3089..U+308E, U+3090..U+3093, U+30A1, U+30A3, U+30A5, U+30A7, U+30A9, U+30AD, U+30AF, U+30B3, U+30B5, U+30BB, U+30BD, U+30BF, U+30C1, U+30C3, U+30C4, U+30C6, U+30CA, U+30CB, U+30CD, U+30CE, U+30DE, U+30DF, U+30E1, U+30E2, U+30E3, U+30E5, U+30E7, U+30EE, U+30F0..U+30F3, U+30F5, U+30F6, U+31F0, U+31F1, U+31F2, U+31F3, U+31F4, U+31F5, U+31F6, U+31F7, U+31F8, U+31F9, U+31FA, U+31FB, U+31FC, U+31FD, U+31FE, U+31FF, U+AC00..U+D7A3, U+1100..U+1159, U+1161..U+11A2, U+11A8..U+11F9, U+A000..U+A48C, U+A492..U+A4C6
	#enable_star = 1
	min_infix_len = 2
}

index search_delta : product_search
{
	source			= search_delta
	path			= /var/idx/sphinx/search_delta
	docinfo			= extern
	#charset_type	= utf-8
	charset_table	= 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F
	#phrase_boundary = U+0020, U+002C
	#phrase_boundary_step = 100

	ngram_len = 2
	ngram_chars = U+4E00..U+9FBB, U+3400..U+4DB5, U+20000..U+2A6D6, U+FA0E, U+FA0F, U+FA11, U+FA13, U+FA14, U+FA1F, U+FA21, U+FA23, U+FA24, U+FA27, U+FA28, U+FA29, U+3105..U+312C, U+31A0..U+31B7, U+3041, U+3043, U+3045, U+3047, U+3049, U+304B, U+304D, U+304F, U+3051, U+3053, U+3055, U+3057, U+3059, U+305B, U+305D, U+305F, U+3061, U+3063, U+3066, U+3068, U+306A..U+306F, U+3072, U+3075, U+3078, U+307B, U+307E..U+3083, U+3085, U+3087, U+3089..U+308E, U+3090..U+3093, U+30A1, U+30A3, U+30A5, U+30A7, U+30A9, U+30AD, U+30AF, U+30B3, U+30B5, U+30BB, U+30BD, U+30BF, U+30C1, U+30C3, U+30C4, U+30C6, U+30CA, U+30CB, U+30CD, U+30CE, U+30DE, U+30DF, U+30E1, U+30E2, U+30E3, U+30E5, U+30E7, U+30EE, U+30F0..U+30F3, U+30F5, U+30F6, U+31F0, U+31F1, U+31F2, U+31F3, U+31F4, U+31F5, U+31F6, U+31F7, U+31F8, U+31F9, U+31FA, U+31FB, U+31FC, U+31FD, U+31FE, U+31FF, U+AC00..U+D7A3, U+1100..U+1159, U+1161..U+11A2, U+11A8..U+11F9, U+A000..U+A48C, U+A492..U+A4C6
	#enable_star = 1
	min_infix_len = 2
}

indexer
{
	mem_limit		= 1024M
}

searchd
{
	listen			= 9312
	listen			= 9306:mysql41
	log				= /var/log/sphinx/searchd.log
	query_log		= /var/log/sphinx/query.log
	read_timeout	= 5
	max_children	= 30
	pid_file		= /var/run/sphinx/searchd.pid
	seamless_rotate	= 1
	preopen_indexes	= 1
	unlink_old		= 1
	workers			= threads # for RT to work
	#binlog_path		= /usr/local/sphinx/var/data
}
